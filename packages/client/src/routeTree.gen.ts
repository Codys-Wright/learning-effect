/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as StylesRouteImport } from './routes/styles'
import { Route as ExampleRouteImport } from './routes/example'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api/$'

const rootServerRouteImport = createServerRootRoute()

const StylesRoute = StylesRouteImport.update({
  id: '/styles',
  path: '/styles',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleRoute = ExampleRouteImport.update({
  id: '/example',
  path: '/example',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/example': typeof ExampleRoute
  '/styles': typeof StylesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/example': typeof ExampleRoute
  '/styles': typeof StylesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/example': typeof ExampleRoute
  '/styles': typeof StylesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/example' | '/styles'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/example' | '/styles'
  id: '__root__' | '/' | '/example' | '/styles'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExampleRoute: typeof ExampleRoute
  StylesRoute: typeof StylesRoute
}
export interface FileServerRoutesByFullPath {
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/$': typeof ApiSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/$'
  id: '__root__' | '/api/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSplatServerRoute: typeof ApiSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/styles': {
      id: '/styles'
      path: '/styles'
      fullPath: '/styles'
      preLoaderRoute: typeof StylesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example': {
      id: '/example'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExampleRoute: ExampleRoute,
  StylesRoute: StylesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSplatServerRoute: ApiSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
